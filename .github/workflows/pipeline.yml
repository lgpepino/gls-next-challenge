name: Python APP workflow

on:
    push:
        branches: [ main, develop ]

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build the python application

        steps:
            - 
                uses: actions/checkout@v4.1.7
            -
                name: Login to Docker Hub
                uses: docker/login-action@v3.3.0
                with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}    
            - 
              name: Build and push
              uses: docker/build-push-action@v6.7.0
              with: 
                    context: .
                    push: true
                    tags: lgpepino/generic-images:my-python-app-${{ github.sha }}
                    file: ./Dockerfile
    deploy:
        runs-on: ubuntu-latest
        name: Deploy the application to Cloud Minikube

        steps:
            - 
                uses: actions/checkout@v4.1.7
                with:
                    repository: medyagh/local-dev-example-with-minikube
            - 
                name: Start minikube
                uses: medyagh/setup-minikube@latest
            - 
                name: Try the cluster!
                run: kubectl get pods -A
            - 
                name: Deploy to minikube
                run:
                  curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
                  sudo apt-get install apt-transport-https --yes
                  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
                  sudo apt-get update
                  sudo apt-get install helm  
                  helm upgrade -i --namespace dev --create-namespace python-app ./python-app -f python-app/values.yaml
                  kubectl wait --for=condition=ready pod -l app=python-app